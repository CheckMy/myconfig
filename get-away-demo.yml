# http://localhost:9000/product/product/list
zuul:
  sensitive-headers: #全部忽略敏感头（忽略Cookie）
  routes:
    # 配置户访问方式 http://localhost:9000/my/product/list
    # 查看所有路由规则 http://localhost:9000/actuator/routes
    my: # 一行的名字随意定义
      path: /my/** # 注意是 ** 不是 *，这一行一定是访问路径
      serviceId: PRODUCT
      # 设置敏感信息为空，默认情况下 "Cookie", "Set-Cookie", "Authorization" 会过滤以上字段
      # 因此 cookies 是不会传到后面的服务，设置为空就行
      sensitiveHeaders:
    # 简洁写法,就是 product 服务可以，通过 /test/ 访问
    product: /test/**
  # - 代表 set 集合,满足此规则下的路径无法被路由
  # http://localhost:8080/product/zuul        正常访问
  # http://localhost:9000/test/product/zuul  无法访问
  ignored-patterns:
    - /**/product/zuul
    -
management:
  endpoints:
    web:
      exposure:
        include: "*"

ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 25000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 23000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

spring:
  rabbitmq:
    host: 47.105.218.58
    port: 5672
    username: guest
    password: guest
  redis:
    host: 47.105.218.58
    port: 6379
  cloud:
    zipkin:
      base-url: http://47.105.218.58:9411/
      sender:
        type: web # 坑的东西
    sleuth:
      sampler:
        probability: 1 # 默认只暴露 0.1 的数据请求,开发设置为1
      http:
        legacy:
          enabled: true